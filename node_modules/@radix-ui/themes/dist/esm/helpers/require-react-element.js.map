{
  "version": 3,
  "sources": ["../../../src/helpers/require-react-element.ts"],
  "sourcesContent": ["import * as React from 'react';\n\n/** A function that throws an error when a value isn't a valid React Element, otherwise returns the value */\nexport const requireReactElement = <T extends React.ReactNode>(children: T): T => {\n  const isReactElement = React.isValidElement(children);\n\n  if (!isReactElement) {\n    throw Error(\n      `Expected a single React Element child, but got: ${React.Children.toArray(children)\n        .map((child) =>\n          typeof child === 'object' && 'type' in child && typeof child.type === 'string'\n            ? child.type\n            : typeof child\n        )\n        .join(', ')}`\n    );\n  }\n\n  return children;\n};\n"],
  "mappings": "AAAA,UAAYA,MAAW,QAGhB,MAAMC,EAAkDC,GAAmB,CAGhF,GAAI,CAFmBF,EAAM,eAAeE,CAAQ,EAGlD,MAAM,MACJ,mDAAmDF,EAAM,SAAS,QAAQE,CAAQ,EAC/E,IAAKC,GACJ,OAAOA,GAAU,UAAY,SAAUA,GAAS,OAAOA,EAAM,MAAS,SAClEA,EAAM,KACN,OAAOA,CACb,EACC,KAAK,IAAI,CAAC,EACf,EAGF,OAAOD,CACT",
  "names": ["React", "requireReactElement", "children", "child"]
}
