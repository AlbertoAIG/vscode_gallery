{
  "version": 3,
  "sources": ["../../../src/props/color.prop.ts"],
  "sourcesContent": ["import type { PropDef } from './prop-def.js';\n\n// prettier-ignore\nconst accentColors = ['gray', 'gold', 'bronze', 'brown', 'yellow', 'amber', 'orange', 'tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'lime', 'mint', 'sky'] as const;\n\nconst grayColors = ['auto', 'gray', 'mauve', 'slate', 'sage', 'olive', 'sand'] as const;\n\nconst colorPropDef = {\n  color: {\n    type: 'enum',\n    values: accentColors,\n    default: '' as (typeof accentColors)[number] | undefined,\n  },\n} satisfies {\n  color: PropDef<(typeof accentColors)[number]>;\n};\n\n// Difference between `colorPropDef` and `inheritedColorPropDef` is in the defaults:\n//\n// `default: ''` sets an empty `data-accent-color` attribute to define the right\n// high-contrast colors for descendants that inherit a colour by default.\n//\n// `default: undefined` allows components like Text to inherit color directly,\n// but respond to `data-accent-color` on parent when it's `highContrast`.\nconst inheritedColorPropDef = {\n  color: {\n    type: 'enum',\n    values: accentColors,\n    default: undefined as (typeof accentColors)[number] | undefined,\n  },\n} satisfies {\n  color: PropDef<(typeof accentColors)[number]>;\n};\n\nexport {\n  colorPropDef,\n  inheritedColorPropDef,\n  //\n  accentColors,\n  grayColors,\n};\n"],
  "mappings": "AAGA,MAAMA,EAAe,CAAC,OAAQ,OAAQ,SAAU,QAAS,SAAU,QAAS,SAAU,SAAU,MAAO,OAAQ,UAAW,OAAQ,OAAQ,SAAU,SAAU,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,OAAQ,OAAQ,KAAK,EAEjPC,EAAa,CAAC,OAAQ,OAAQ,QAAS,QAAS,OAAQ,QAAS,MAAM,EAEvEC,EAAe,CACnB,MAAO,CACL,KAAM,OACN,OAAQF,EACR,QAAS,EACX,CACF,EAWMG,EAAwB,CAC5B,MAAO,CACL,KAAM,OACN,OAAQH,EACR,QAAS,MACX,CACF",
  "names": ["accentColors", "grayColors", "colorPropDef", "inheritedColorPropDef"]
}
