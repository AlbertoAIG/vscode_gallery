{
  "version": 3,
  "sources": ["../../../src/components/box.props.ts"],
  "sourcesContent": ["import { asChildPropDef } from '../props/index.js';\nimport type { GetPropDefTypes, PropDef } from '../props/index.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline', 'inline-block', 'block'] as const;\n\nconst boxPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-block\"\n   * display={{ sm: 'none', lg: 'block' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n};\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype BoxOwnProps = GetPropDefTypes<typeof boxPropDefs & typeof asChildPropDef>;\n\nexport { boxPropDefs };\nexport type { BoxOwnProps };\n"],
  "mappings": "AAAA,OAAS,kBAAAA,MAAsB,oBAG/B,MAAMC,EAAK,CAAC,MAAO,MAAM,EACnBC,EAAgB,CAAC,OAAQ,SAAU,eAAgB,OAAO,EAE1DC,EAAc,CAQlB,GAAI,CAAE,KAAM,OAAQ,OAAQF,EAAI,QAAS,KAAM,EAC/C,GAAGD,EAYH,QAAS,CACP,KAAM,OACN,UAAW,eACX,OAAQE,EACR,WAAY,EACd,CACF",
  "names": ["asChildPropDef", "as", "displayValues", "boxPropDefs"]
}
