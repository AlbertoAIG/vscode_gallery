{
  "version": 3,
  "sources": ["../../../src/components/radio-group.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\nimport { createRadioGroupScope } from '@radix-ui/react-radio-group';\nimport { radioGroupRootPropDefs } from './radio-group.props.js';\nimport { extractProps } from '../helpers/index.js';\nimport { marginPropDefs } from '../props/index.js';\n\nimport { Text } from './text.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { GetPropDefTypes, MarginProps } from '../props/index.js';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst RADIO_GROUP_NAME = 'RadioGroup';\n\ntype ScopedProps<P> = P & { __scopeRadioGroup?: Scope };\nconst [createRadioGroupContext] = createContextScope(RADIO_GROUP_NAME, [createRadioGroupScope]);\nconst useRadioGroupScope = createRadioGroupScope();\n\ntype RadioGroupRootOwnProps = GetPropDefTypes<typeof radioGroupRootPropDefs>;\ntype RadioGroupContextValue = RadioGroupRootOwnProps;\n\nconst [RadioGroupProvider, useRadioGroupContext] =\n  createRadioGroupContext<RadioGroupContextValue>(RADIO_GROUP_NAME);\n\ntype RadioGroupRootElement = React.ElementRef<typeof RadioGroupPrimitive.Root>;\ninterface RadioGroupRootProps\n  extends ComponentPropsWithout<\n      typeof RadioGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    RadioGroupRootOwnProps {}\nconst RadioGroupRoot = React.forwardRef<RadioGroupRootElement, RadioGroupRootProps>(\n  (\n    {\n      color = radioGroupRootPropDefs.color.default,\n      highContrast = radioGroupRootPropDefs.highContrast.default,\n      size = radioGroupRootPropDefs.size.default,\n      variant = radioGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<RadioGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeRadioGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const radioGroupScope = useRadioGroupScope(__scopeRadioGroup);\n    return (\n      <RadioGroupProvider\n        scope={__scopeRadioGroup}\n        color={color}\n        highContrast={highContrast}\n        size={size}\n        variant={variant}\n      >\n        <RadioGroupPrimitive.Root\n          {...radioGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-RadioGroupRoot', className)}\n        />\n      </RadioGroupProvider>\n    );\n  }\n);\nRadioGroupRoot.displayName = 'RadioGroup.Root';\n\ntype RadioGroupItemElement = React.ElementRef<typeof RadioGroupItemRadio>;\ninterface RadioGroupItemProps\n  extends ComponentPropsWithout<typeof RadioGroupItemRadio, RemovedProps>,\n    MarginProps {}\nconst RadioGroupItem = React.forwardRef<RadioGroupItemElement, RadioGroupItemProps>(\n  (_props: ScopedProps<RadioGroupItemProps>, forwardedRef) => {\n    const { __scopeRadioGroup, children, className, style, ...props } = _props;\n    const { size } = useRadioGroupContext('RadioGroupItem', __scopeRadioGroup);\n\n    // Render `<Text as=\"label\">` if children\u00A0are provided, otherwise render\n    // the solo radio button to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-RadioGroupItem', className)}\n          style={style}\n        >\n          <RadioGroupItemRadio\n            __scopeRadioGroup={__scopeRadioGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span>{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <RadioGroupItemRadio\n        __scopeRadioGroup={__scopeRadioGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nRadioGroupItem.displayName = 'RadioGroup.Item';\n\ntype RadioGroupItemRadioElement = React.ElementRef<typeof RadioGroupPrimitive.Item>;\ninterface RadioGroupItemRadioProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {}\nconst RadioGroupItemRadio = React.forwardRef<\n  RadioGroupItemRadioElement,\n  ScopedProps<RadioGroupItemRadioProps>\n>(({ __scopeRadioGroup, ...props }, forwardedRef) => {\n  const context = useRadioGroupContext('RadioGroupItemRadio', __scopeRadioGroup);\n  const radioGroupScope = useRadioGroupScope(__scopeRadioGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    radioGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <RadioGroupPrimitive.Item\n      {...radioGroupScope}\n      data-accent-color={color}\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', className)}\n    />\n  );\n});\nRadioGroupItemRadio.displayName = 'RadioGroup.ItemRadio';\n\nexport { RadioGroupRoot as Root, RadioGroupItem as Item };\nexport type { RadioGroupRootProps as RootProps, RadioGroupItemProps as ItemProps };\n"],
  "mappings": "aAEA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,sBAAAC,MAA0B,0BACnC,UAAYC,MAAyB,8BACrC,OAAS,yBAAAC,MAA6B,8BACtC,OAAS,0BAAAC,MAA8B,yBACvC,OAAS,gBAAAC,MAAoB,sBAC7B,OAAS,kBAAAC,MAAsB,oBAE/B,OAAS,QAAAC,MAAY,YAMrB,MAAMC,EAAmB,aAGnB,CAACC,CAAuB,EAAIR,EAAmBO,EAAkB,CAACL,CAAqB,CAAC,EACxFO,EAAqBP,EAAsB,EAK3C,CAACQ,EAAoBC,CAAoB,EAC7CH,EAAgDD,CAAgB,EAU5DK,EAAiBd,EAAM,WAC3B,CACE,CACE,MAAAe,EAAQV,EAAuB,MAAM,QACrC,aAAAW,EAAeX,EAAuB,aAAa,QACnD,KAAAY,EAAOZ,EAAuB,KAAK,QACnC,QAAAa,EAAUb,EAAuB,QAAQ,QACzC,GAAGc,CACL,EACAC,IACG,CACH,KAAM,CAAE,kBAAAC,EAAmB,UAAAC,EAAW,GAAGC,CAAU,EAAIjB,EAAaa,EAAOZ,CAAc,EACnFiB,EAAkBb,EAAmBU,CAAiB,EAC5D,OACErB,EAAA,cAACY,EAAA,CACC,MAAOS,EACP,MAAON,EACP,aAAcC,EACd,KAAMC,EACN,QAASC,GAETlB,EAAA,cAACG,EAAoB,KAApB,CACE,GAAGqB,EACH,GAAGD,EACJ,IAAKH,EACL,UAAWnB,EAAW,oBAAqBqB,CAAS,EACtD,CACF,CAEJ,CACF,EACAR,EAAe,YAAc,kBAM7B,MAAMW,EAAiBzB,EAAM,WAC3B,CAAC0B,EAA0CN,IAAiB,CAC1D,KAAM,CAAE,kBAAAC,EAAmB,SAAAM,EAAU,UAAAL,EAAW,MAAAM,EAAO,GAAGT,CAAM,EAAIO,EAC9D,CAAE,KAAAT,CAAK,EAAIJ,EAAqB,iBAAkBQ,CAAiB,EAIzE,OAAIM,EAEA3B,EAAA,cAACQ,EAAA,CACC,GAAG,QACH,KAAMS,EACN,UAAWhB,EAAW,oBAAqBqB,CAAS,EACpD,MAAOM,GAEP5B,EAAA,cAAC6B,EAAA,CACC,kBAAmBR,EAClB,GAAGF,EACJ,IAAKC,EACP,EACCO,GAAY3B,EAAA,cAAC,YAAM2B,CAAS,CAC/B,EAKF3B,EAAA,cAAC6B,EAAA,CACC,kBAAmBR,EAClB,GAAGF,EACJ,IAAKC,EACL,UAAWE,EACX,MAAOM,EACT,CAEJ,CACF,EACAH,EAAe,YAAc,kBAK7B,MAAMI,EAAsB7B,EAAM,WAGhC,CAAC,CAAE,kBAAAqB,EAAmB,GAAGF,CAAM,EAAGC,IAAiB,CACnD,MAAMU,EAAUjB,EAAqB,sBAAuBQ,CAAiB,EACvEG,EAAkBb,EAAmBU,CAAiB,EACtD,CAAE,MAAAN,EAAO,UAAAO,CAAU,EAAIhB,EAC3B,CAAE,GAAGa,EAAO,GAAGW,CAAQ,EACvBzB,EACAE,CACF,EACA,OACEP,EAAA,cAACG,EAAoB,KAApB,CACE,GAAGqB,EACJ,oBAAmBT,EAClB,GAAGI,EACJ,QAAS,GACT,IAAKC,EACL,UAAWnB,EAAW,WAAY,mBAAoBqB,CAAS,EACjE,CAEJ,CAAC,EACDO,EAAoB,YAAc",
  "names": ["React", "classNames", "createContextScope", "RadioGroupPrimitive", "createRadioGroupScope", "radioGroupRootPropDefs", "extractProps", "marginPropDefs", "Text", "RADIO_GROUP_NAME", "createRadioGroupContext", "useRadioGroupScope", "RadioGroupProvider", "useRadioGroupContext", "RadioGroupRoot", "color", "highContrast", "size", "variant", "props", "forwardedRef", "__scopeRadioGroup", "className", "rootProps", "radioGroupScope", "RadioGroupItem", "_props", "children", "style", "RadioGroupItemRadio", "context"]
}
