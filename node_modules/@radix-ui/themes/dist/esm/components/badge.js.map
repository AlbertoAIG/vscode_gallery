{
  "version": 3,
  "sources": ["../../../src/components/badge.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\nimport { badgePropDefs } from './badge.props.js';\nimport { extractProps } from '../helpers/index.js';\nimport { marginPropDefs } from '../props/index.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { GetPropDefTypes, MarginProps } from '../props/index.js';\n\ntype BadgeElement = React.ElementRef<'span'>;\ntype BadgeOwnProps = GetPropDefTypes<typeof badgePropDefs>;\ninterface BadgeProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    BadgeOwnProps {}\nconst Badge = React.forwardRef<BadgeElement, BadgeProps>((props, forwardedRef) => {\n  const { asChild, className, color, radius, ...badgeProps } = extractProps(\n    props,\n    badgePropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot : 'span';\n  return (\n    <Comp\n      data-accent-color={color}\n      data-radius={radius}\n      {...badgeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Badge', className)}\n    />\n  );\n});\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport type { BadgeProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,QAAAC,MAAY,uBACrB,OAAS,iBAAAC,MAAqB,mBAC9B,OAAS,gBAAAC,MAAoB,sBAC7B,OAAS,kBAAAC,MAAsB,oBAW/B,MAAMC,EAAQN,EAAM,WAAqC,CAACO,EAAOC,IAAiB,CAChF,KAAM,CAAE,QAAAC,EAAS,UAAAC,EAAW,MAAAC,EAAO,OAAAC,EAAQ,GAAGC,CAAW,EAAIT,EAC3DG,EACAJ,EACAE,CACF,EAEA,OACEL,EAAA,cAFWS,EAAUP,EAAO,OAE3B,CACC,oBAAmBS,EACnB,cAAaC,EACZ,GAAGC,EACJ,IAAKL,EACL,UAAWP,EAAW,WAAY,WAAYS,CAAS,EACzD,CAEJ,CAAC,EACDJ,EAAM,YAAc",
  "names": ["React", "classNames", "Slot", "badgePropDefs", "extractProps", "marginPropDefs", "Badge", "props", "forwardedRef", "asChild", "className", "color", "radius", "badgeProps"]
}
