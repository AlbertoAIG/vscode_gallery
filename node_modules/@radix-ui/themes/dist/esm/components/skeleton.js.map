{
  "version": 3,
  "sources": ["../../../src/components/skeleton.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\nimport { skeletonPropDefs } from './skeleton.props.js';\nimport { extractProps } from '../helpers/index.js';\nimport { marginPropDefs } from '../props/index.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { GetPropDefTypes, MarginProps } from '../props/index.js';\n\ntype SkeletonElement = React.ElementRef<'span'>;\ntype SkeletonOwnProps = GetPropDefTypes<typeof skeletonPropDefs>;\ninterface SkeletonProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SkeletonOwnProps {}\nconst Skeleton = React.forwardRef<SkeletonElement, SkeletonProps>((props, forwardedRef) => {\n  const { children, className, loading, ...skeletonProps } = extractProps(\n    props,\n    skeletonPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const Tag = React.isValidElement(children) ? Slot : 'span';\n\n  return (\n    <Tag\n      ref={forwardedRef}\n      aria-hidden\n      className={classNames('rt-Skeleton', className)}\n      data-inline-skeleton={React.isValidElement(children) ? undefined : true}\n      tabIndex={-1}\n      // Workaround to use `inert` until https://github.com/facebook/react/pull/24730 is merged.\n      {...{ inert: true ? '' : undefined }}\n      {...skeletonProps}\n    >\n      {children}\n    </Tag>\n  );\n});\nSkeleton.displayName = 'Skeleton';\n\nexport { Skeleton };\nexport type { SkeletonProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,QAAAC,MAAY,uBACrB,OAAS,oBAAAC,MAAwB,sBACjC,OAAS,gBAAAC,MAAoB,sBAC7B,OAAS,kBAAAC,MAAsB,oBAW/B,MAAMC,EAAWN,EAAM,WAA2C,CAACO,EAAOC,IAAiB,CACzF,KAAM,CAAE,SAAAC,EAAU,UAAAC,EAAW,QAAAC,EAAS,GAAGC,CAAc,EAAIR,EACzDG,EACAJ,EACAE,CACF,EAEA,GAAI,CAACM,EAAS,OAAOF,EAErB,MAAMI,EAAMb,EAAM,eAAeS,CAAQ,EAAIP,EAAO,OAEpD,OACEF,EAAA,cAACa,EAAA,CACC,IAAKL,EACL,cAAW,GACX,UAAWP,EAAW,cAAeS,CAAS,EAC9C,uBAAsBV,EAAM,eAAeS,CAAQ,EAAI,OAAY,GACnE,SAAU,GAEJ,MAAc,GACnB,GAAGG,GAEHH,CACH,CAEJ,CAAC,EACDH,EAAS,YAAc",
  "names": ["React", "classNames", "Slot", "skeletonPropDefs", "extractProps", "marginPropDefs", "Skeleton", "props", "forwardedRef", "children", "className", "loading", "skeletonProps", "Tag"]
}
