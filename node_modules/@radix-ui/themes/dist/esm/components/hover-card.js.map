{
  "version": 3,
  "sources": ["../../../src/components/hover-card.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card';\nimport { hoverCardContentPropDefs } from './hover-card.props.js';\nimport { extractProps, requireReactElement } from '../helpers/index.js';\nimport { Theme } from './theme.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { HoverCardContentOwnProps } from '../props/index.js';\n\ninterface HoverCardRootProps\n  extends React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Root> {}\nconst HoverCardRoot: React.FC<HoverCardRootProps> = (props) => (\n  <HoverCardPrimitive.Root closeDelay={150} openDelay={200} {...props} />\n);\nHoverCardRoot.displayName = 'HoverCard.Root';\n\ntype HoverCardTriggerElement = React.ElementRef<typeof HoverCardPrimitive.Trigger>;\ninterface HoverCardTriggerProps\n  extends ComponentPropsWithout<typeof HoverCardPrimitive.Trigger, RemovedProps> {}\nconst HoverCardTrigger = React.forwardRef<HoverCardTriggerElement, HoverCardTriggerProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <HoverCardPrimitive.Trigger\n      ref={forwardedRef}\n      className={classNames('rt-HoverCardTrigger', className)}\n      {...props}\n      asChild\n    >\n      {requireReactElement(children)}\n    </HoverCardPrimitive.Trigger>\n  )\n);\nHoverCardTrigger.displayName = 'HoverCard.Trigger';\n\ntype HoverCardContentElement = React.ElementRef<typeof HoverCardPrimitive.Content>;\ninterface HoverCardContentProps\n  extends ComponentPropsWithout<typeof HoverCardPrimitive.Content, RemovedProps>,\n    HoverCardContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Portal>['container'];\n}\nconst HoverCardContent = React.forwardRef<HoverCardContentElement, HoverCardContentProps>(\n  (props, forwardedRef) => {\n    const { className, forceMount, container, ...contentProps } = extractProps(\n      props,\n      hoverCardContentPropDefs\n    );\n    return (\n      <HoverCardPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <HoverCardPrimitive.Content\n            align=\"start\"\n            sideOffset={8}\n            collisionPadding={10}\n            {...contentProps}\n            ref={forwardedRef}\n            className={classNames('rt-PopperContent', 'rt-HoverCardContent', className)}\n          />\n        </Theme>\n      </HoverCardPrimitive.Portal>\n    );\n  }\n);\nHoverCardContent.displayName = 'HoverCard.Content';\n\nexport { HoverCardRoot as Root, HoverCardTrigger as Trigger, HoverCardContent as Content };\nexport type {\n  HoverCardRootProps as RootProps,\n  HoverCardTriggerProps as TriggerProps,\n  HoverCardContentProps as ContentProps,\n};\n"],
  "mappings": "aAEA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,UAAYC,MAAwB,6BACpC,OAAS,4BAAAC,MAAgC,wBACzC,OAAS,gBAAAC,EAAc,uBAAAC,MAA2B,sBAClD,OAAS,SAAAC,MAAa,aAOtB,MAAMC,EAA+CC,GACnDR,EAAA,cAACE,EAAmB,KAAnB,CAAwB,WAAY,IAAK,UAAW,IAAM,GAAGM,EAAO,EAEvED,EAAc,YAAc,iBAK5B,MAAME,EAAmBT,EAAM,WAC7B,CAAC,CAAE,SAAAU,EAAU,UAAAC,EAAW,GAAGH,CAAM,EAAGI,IAClCZ,EAAA,cAACE,EAAmB,QAAnB,CACC,IAAKU,EACL,UAAWX,EAAW,sBAAuBU,CAAS,EACrD,GAAGH,EACJ,QAAO,IAENH,EAAoBK,CAAQ,CAC/B,CAEJ,EACAD,EAAiB,YAAc,oBAQ/B,MAAMI,EAAmBb,EAAM,WAC7B,CAACQ,EAAOI,IAAiB,CACvB,KAAM,CAAE,UAAAD,EAAW,WAAAG,EAAY,UAAAC,EAAW,GAAGC,CAAa,EAAIZ,EAC5DI,EACAL,CACF,EACA,OACEH,EAAA,cAACE,EAAmB,OAAnB,CAA0B,UAAWa,EAAW,WAAYD,GAC3Dd,EAAA,cAACM,EAAA,CAAM,QAAO,IACZN,EAAA,cAACE,EAAmB,QAAnB,CACC,MAAM,QACN,WAAY,EACZ,iBAAkB,GACjB,GAAGc,EACJ,IAAKJ,EACL,UAAWX,EAAW,mBAAoB,sBAAuBU,CAAS,EAC5E,CACF,CACF,CAEJ,CACF,EACAE,EAAiB,YAAc",
  "names": ["React", "classNames", "HoverCardPrimitive", "hoverCardContentPropDefs", "extractProps", "requireReactElement", "Theme", "HoverCardRoot", "props", "HoverCardTrigger", "children", "className", "forwardedRef", "HoverCardContent", "forceMount", "container", "contentProps"]
}
