{
  "version": 3,
  "sources": ["../../../src/components/base-button.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\nimport { baseButtonPropDefs } from './base-button.props.js';\nimport { extractProps, mapButtonSizeToSpinnerSize, mapResponsiveProp } from '../helpers/index.js';\nimport { marginPropDefs } from '../props/index.js';\nimport { Flex } from './flex.js';\nimport { Spinner } from './spinner.js';\nimport { VisuallyHidden } from './visually-hidden.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { GetPropDefTypes, MarginProps } from '../props/index.js';\n\ntype BaseButtonElement = React.ElementRef<'button'>;\ntype BaseButtonOwnProps = GetPropDefTypes<typeof baseButtonPropDefs>;\ninterface BaseButtonProps\n  extends ComponentPropsWithout<'button', RemovedProps>,\n    MarginProps,\n    BaseButtonOwnProps {}\nconst BaseButton = React.forwardRef<BaseButtonElement, BaseButtonProps>((props, forwardedRef) => {\n  const { size = baseButtonPropDefs.size.default } = props;\n  const {\n    className,\n    children,\n    asChild,\n    color,\n    radius,\n    disabled = props.loading,\n    ...baseButtonProps\n  } = extractProps(props, baseButtonPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : 'button';\n  return (\n    <Comp\n      // The `data-disabled` attribute\u00A0enables correct styles when doing `<Button asChild disabled>`\n      data-disabled={disabled || undefined}\n      data-accent-color={color}\n      data-radius={radius}\n      {...baseButtonProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseButton', className)}\n      disabled={disabled}\n    >\n      {props.loading ? (\n        <>\n          {/**\n           * We need a wrapper to set `visibility: hidden` to hide the button content whilst we show the `Spinner`.\n           * The button is a flex container with a `gap`, so we use `display: contents` to ensure the correct flex layout.\n           *\n           * However, `display: contents` removes the content from the accessibility tree in some browsers,\n           * so we force remove it with `aria-hidden` and re-add it in the tree with `VisuallyHidden`\n           */}\n          <span style={{ display: 'contents', visibility: 'hidden' }} aria-hidden>\n            {children}\n          </span>\n          <VisuallyHidden>{children}</VisuallyHidden>\n\n          <Flex asChild align=\"center\" justify=\"center\" position=\"absolute\" inset=\"0\">\n            <span>\n              <Spinner size={mapResponsiveProp(size, mapButtonSizeToSpinnerSize)} />\n            </span>\n          </Flex>\n        </>\n      ) : (\n        children\n      )}\n    </Comp>\n  );\n});\nBaseButton.displayName = 'BaseButton';\n\nexport { BaseButton };\nexport type { BaseButtonProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,QAAAC,MAAY,uBACrB,OAAS,sBAAAC,MAA0B,yBACnC,OAAS,gBAAAC,EAAc,8BAAAC,EAA4B,qBAAAC,MAAyB,sBAC5E,OAAS,kBAAAC,MAAsB,oBAC/B,OAAS,QAAAC,MAAY,YACrB,OAAS,WAAAC,MAAe,eACxB,OAAS,kBAAAC,MAAsB,uBAW/B,MAAMC,EAAaX,EAAM,WAA+C,CAACY,EAAOC,IAAiB,CAC/F,KAAM,CAAE,KAAAC,EAAOX,EAAmB,KAAK,OAAQ,EAAIS,EAC7C,CACJ,UAAAG,EACA,SAAAC,EACA,QAAAC,EACA,MAAAC,EACA,OAAAC,EACA,SAAAC,EAAWR,EAAM,QACjB,GAAGS,CACL,EAAIjB,EAAaQ,EAAOT,EAAoBI,CAAc,EAE1D,OACEP,EAAA,cAFWiB,EAAUf,EAAO,SAE3B,CAEC,gBAAekB,GAAY,OAC3B,oBAAmBF,EACnB,cAAaC,EACZ,GAAGE,EACJ,IAAKR,EACL,UAAWZ,EAAW,WAAY,gBAAiBc,CAAS,EAC5D,SAAUK,GAETR,EAAM,QACLZ,EAAA,cAAAA,EAAA,cAQEA,EAAA,cAAC,QAAK,MAAO,CAAE,QAAS,WAAY,WAAY,QAAS,EAAG,cAAW,IACpEgB,CACH,EACAhB,EAAA,cAACU,EAAA,KAAgBM,CAAS,EAE1BhB,EAAA,cAACQ,EAAA,CAAK,QAAO,GAAC,MAAM,SAAS,QAAQ,SAAS,SAAS,WAAW,MAAM,KACtER,EAAA,cAAC,YACCA,EAAA,cAACS,EAAA,CAAQ,KAAMH,EAAkBQ,EAAMT,CAA0B,EAAG,CACtE,CACF,CACF,EAEAW,CAEJ,CAEJ,CAAC,EACDL,EAAW,YAAc",
  "names": ["React", "classNames", "Slot", "baseButtonPropDefs", "extractProps", "mapButtonSizeToSpinnerSize", "mapResponsiveProp", "marginPropDefs", "Flex", "Spinner", "VisuallyHidden", "BaseButton", "props", "forwardedRef", "size", "className", "children", "asChild", "color", "radius", "disabled", "baseButtonProps"]
}
