import * as React from 'react';
import * as PopoverPrimitive from '@radix-ui/react-popover';
import type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';
import type { PopoverContentOwnProps } from '../props/index.js';
interface PopoverRootProps extends React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Root> {
}
declare const PopoverRoot: React.FC<PopoverRootProps>;
interface PopoverTriggerProps extends ComponentPropsWithout<typeof PopoverPrimitive.Trigger, RemovedProps> {
}
declare const PopoverTrigger: React.ForwardRefExoticComponent<PopoverTriggerProps & React.RefAttributes<HTMLButtonElement>>;
interface PopoverContentProps extends ComponentPropsWithout<typeof PopoverPrimitive.Content, RemovedProps>, PopoverContentOwnProps {
    container?: React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Portal>['container'];
}
declare const PopoverContent: React.ForwardRefExoticComponent<PopoverContentProps & React.RefAttributes<HTMLDivElement>>;
interface PopoverCloseProps extends ComponentPropsWithout<typeof PopoverPrimitive.Close, RemovedProps> {
}
declare const PopoverClose: React.ForwardRefExoticComponent<PopoverCloseProps & React.RefAttributes<HTMLButtonElement>>;
export { PopoverRoot as Root, PopoverContent as Content, PopoverTrigger as Trigger, PopoverClose as Close, };
export type { PopoverRootProps as RootProps, PopoverContentProps as ContentProps, PopoverTriggerProps as TriggerProps, PopoverCloseProps as CloseProps, };
