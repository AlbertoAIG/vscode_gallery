{
  "version": 3,
  "sources": ["../../../src/components/tooltip.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/index.js';\nimport { tooltipPropDefs } from './tooltip.props.js';\n\nimport type { GetPropDefTypes } from '../props/index.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\n\ntype TooltipElement = React.ElementRef<typeof TooltipPrimitive.Content>;\ntype TooltipOwnProps = GetPropDefTypes<typeof tooltipPropDefs>;\ninterface TooltipProps\n  extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Root>,\n    ComponentPropsWithout<typeof TooltipPrimitive.Content, RemovedProps | 'content'>,\n    TooltipOwnProps {\n  content: React.ReactNode;\n  container?: React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Portal>['container'];\n}\nconst Tooltip = React.forwardRef<TooltipElement, TooltipProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    open,\n    defaultOpen,\n    onOpenChange,\n    delayDuration,\n    disableHoverableContent,\n    content,\n    container,\n    forceMount,\n    ...tooltipContentProps\n  } = extractProps(props, tooltipPropDefs);\n  const rootProps = { open, defaultOpen, onOpenChange, delayDuration, disableHoverableContent };\n  return (\n    <TooltipPrimitive.Root {...rootProps}>\n      <TooltipPrimitive.Trigger asChild>{children}</TooltipPrimitive.Trigger>\n      <TooltipPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <TooltipPrimitive.Content\n            sideOffset={4}\n            collisionPadding={10}\n            {...tooltipContentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames('rt-TooltipContent', className)}\n          >\n            <Text as=\"p\" className=\"rt-TooltipText\" size=\"1\">\n              {content}\n            </Text>\n            <TooltipPrimitive.Arrow className=\"rt-TooltipArrow\" />\n          </TooltipPrimitive.Content>\n        </Theme>\n      </TooltipPrimitive.Portal>\n    </TooltipPrimitive.Root>\n  );\n});\nTooltip.displayName = 'Tooltip';\n\nexport { Tooltip };\nexport type { TooltipProps };\n"],
  "mappings": "ukBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAEA,IAAAI,EAAuB,oBACvBC,EAAuB,yBACvBC,EAAkC,sCAClCC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAA6B,+BAC7BC,EAAgC,8BAchC,MAAMR,EAAUE,EAAM,WAAyC,CAACO,EAAOC,IAAiB,CACtF,KAAM,CACJ,SAAAC,EACA,UAAAC,EACA,KAAAC,EACA,YAAAC,EACA,aAAAC,EACA,cAAAC,EACA,wBAAAC,EACA,QAAAC,EACA,UAAAC,EACA,WAAAC,EACA,GAAGC,CACL,KAAI,gBAAaZ,EAAO,iBAAe,EACjCa,EAAY,CAAE,KAAAT,EAAM,YAAAC,EAAa,aAAAC,EAAc,cAAAC,EAAe,wBAAAC,CAAwB,EAC5F,OACEf,EAAA,cAACE,EAAiB,KAAjB,CAAuB,GAAGkB,GACzBpB,EAAA,cAACE,EAAiB,QAAjB,CAAyB,QAAO,IAAEO,CAAS,EAC5CT,EAAA,cAACE,EAAiB,OAAjB,CAAwB,UAAWe,EAAW,WAAYC,GACzDlB,EAAA,cAAC,SAAM,QAAO,IACZA,EAAA,cAACE,EAAiB,QAAjB,CACC,WAAY,EACZ,iBAAkB,GACjB,GAAGiB,EACJ,QAAS,GACT,IAAKX,EACL,aAAW,EAAAa,SAAW,oBAAqBX,CAAS,GAEpDV,EAAA,cAAC,QAAK,GAAG,IAAI,UAAU,iBAAiB,KAAK,KAC1CgB,CACH,EACAhB,EAAA,cAACE,EAAiB,MAAjB,CAAuB,UAAU,kBAAkB,CACtD,CACF,CACF,CACF,CAEJ,CAAC,EACDJ,EAAQ,YAAc",
  "names": ["tooltip_exports", "__export", "Tooltip", "__toCommonJS", "React", "import_classnames", "TooltipPrimitive", "import_text", "import_theme", "import_helpers", "import_tooltip_props", "props", "forwardedRef", "children", "className", "open", "defaultOpen", "onOpenChange", "delayDuration", "disableHoverableContent", "content", "container", "forceMount", "tooltipContentProps", "rootProps", "classNames"]
}
