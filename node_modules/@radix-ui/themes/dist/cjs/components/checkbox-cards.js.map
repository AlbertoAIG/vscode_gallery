{
  "version": 3,
  "sources": ["../../../src/components/checkbox-cards.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxCardsRootPropDefs } from './checkbox-cards.props.js';\nimport { baseCheckboxPropDefs } from './base-checkbox.props.js';\nimport { extractProps } from '../helpers/index.js';\nimport { marginPropDefs } from '../props/index.js';\nimport { Grid } from './grid.js';\nimport { ThickCheckIcon } from './icons.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { GetPropDefTypes, MarginProps, Responsive } from '../props/index.js';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst CHECKBOX_CARD_GROUP_NAME = 'CheckboxCards';\n\ntype ScopedProps<P> = P & { __scopeCheckboxCards?: Scope };\nconst [createCheckboxCardsContext] = createContextScope(CHECKBOX_CARD_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxCardsContextValue = {\n  size?: Responsive<(typeof checkboxCardsRootPropDefs.size.values)[number]>;\n  highContrast?: boolean;\n};\n\nconst [CheckboxCardsProvider, useCheckboxCardsContext] =\n  createCheckboxCardsContext<CheckboxCardsContextValue>(CHECKBOX_CARD_GROUP_NAME);\n\ntype CheckboxCardsRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ntype CheckboxCardsRootOwnProps = GetPropDefTypes<typeof checkboxCardsRootPropDefs>;\ninterface CheckboxCardsRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxCardsRootOwnProps {}\nconst CheckboxCardsRoot = React.forwardRef<CheckboxCardsRootElement, CheckboxCardsRootProps>(\n  (props: ScopedProps<CheckboxCardsRootProps>, forwardedRef) => {\n    const { __scopeCheckboxCards, className, color, ...rootProps } = extractProps(\n      props,\n      checkboxCardsRootPropDefs,\n      marginPropDefs\n    );\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n    return (\n      <CheckboxCardsProvider\n        scope={__scopeCheckboxCards}\n        size={props.size}\n        highContrast={props.highContrast}\n      >\n        <Grid asChild>\n          <CheckboxGroupPrimitive.Root\n            {...checkboxGroupScope}\n            data-accent-color={color}\n            {...rootProps}\n            ref={forwardedRef}\n            className={classNames('rt-CheckboxCardsRoot', className)}\n          />\n        </Grid>\n      </CheckboxCardsProvider>\n    );\n  }\n);\nCheckboxCardsRoot.displayName = 'CheckboxCards.Root';\n\ntype CheckboxCardsItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxCardsItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxCardsItem = React.forwardRef<\n  CheckboxCardsItemElement,\n  ScopedProps<CheckboxCardsItemProps>\n>(({ __scopeCheckboxCards, children, className, style, ...props }, forwardedRef) => {\n  const context = useCheckboxCardsContext('CheckboxCardsItem', __scopeCheckboxCards);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n  const { className: checkboxClassName } = extractProps(\n    // Pass size / highContrast values from the context and static variant to generate styles\n    { size: context?.size, variant: 'surface', highContrast: context?.highContrast },\n    // Pass size & variant prop defs to allow it to be extracted\n    baseCheckboxPropDefs\n  );\n  return (\n    <label className={classNames('rt-BaseCard', 'rt-CheckboxCardsItem', className)} style={style}>\n      {children}\n      <CheckboxGroupPrimitive.Item\n        {...checkboxGroupScope}\n        {...props}\n        ref={forwardedRef}\n        className={classNames(\n          'rt-reset',\n          'rt-BaseCheckboxRoot',\n          'rt-CheckboxCardCheckbox',\n          checkboxClassName\n        )}\n      >\n        <CheckboxGroupPrimitive.Indicator\n          {...checkboxGroupScope}\n          asChild\n          className=\"rt-BaseCheckboxIndicator\"\n        >\n          <ThickCheckIcon />\n        </CheckboxGroupPrimitive.Indicator>\n      </CheckboxGroupPrimitive.Item>\n    </label>\n  );\n});\nCheckboxCardsItem.displayName = 'CheckboxCards.Item';\n\nexport { CheckboxCardsRoot as Root, CheckboxCardsItem as Item };\nexport type { CheckboxCardsRootProps as RootProps, CheckboxCardsItemProps as ItemProps };\n"],
  "mappings": "ukBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,UAAAE,EAAA,SAAAC,IAAA,eAAAC,EAAAJ,GAEA,IAAAK,EAAuB,oBACvBC,EAAuB,yBACvBC,EAAmC,mCACnCC,EAAwC,4CACxCC,EAAyC,yCACzCC,EAA0C,qCAC1CC,EAAqC,oCACrCC,EAA6B,+BAC7BC,EAA+B,6BAC/BC,EAAqB,qBACrBC,EAA+B,sBAM/B,MAAMC,EAA2B,gBAG3B,CAACC,CAA0B,KAAI,sBAAmBD,EAA0B,CAChF,0BACF,CAAC,EACKE,KAAwB,4BAAyB,EAOjD,CAACC,EAAuBC,CAAuB,EACnDH,EAAsDD,CAAwB,EAW1Eb,EAAoBE,EAAM,WAC9B,CAACgB,EAA4CC,IAAiB,CAC5D,KAAM,CAAE,qBAAAC,EAAsB,UAAAC,EAAW,MAAAC,EAAO,GAAGC,CAAU,KAAI,gBAC/DL,EACA,4BACA,gBACF,EACMM,EAAqBT,EAAsBK,CAAoB,EACrE,OACElB,EAAA,cAACc,EAAA,CACC,MAAOI,EACP,KAAMF,EAAM,KACZ,aAAcA,EAAM,cAEpBhB,EAAA,cAAC,QAAK,QAAO,IACXA,EAAA,cAACG,EAAuB,KAAvB,CACE,GAAGmB,EACJ,oBAAmBF,EAClB,GAAGC,EACJ,IAAKJ,EACL,aAAW,EAAAM,SAAW,uBAAwBJ,CAAS,EACzD,CACF,CACF,CAEJ,CACF,EACArB,EAAkB,YAAc,qBAMhC,MAAMD,EAAoBG,EAAM,WAG9B,CAAC,CAAE,qBAAAkB,EAAsB,SAAAM,EAAU,UAAAL,EAAW,MAAAM,EAAO,GAAGT,CAAM,EAAGC,IAAiB,CAClF,MAAMS,EAAUX,EAAwB,oBAAqBG,CAAoB,EAC3EI,EAAqBT,EAAsBK,CAAoB,EAC/D,CAAE,UAAWS,CAAkB,KAAI,gBAEvC,CAAE,KAAMD,GAAS,KAAM,QAAS,UAAW,aAAcA,GAAS,YAAa,EAE/E,sBACF,EACA,OACE1B,EAAA,cAAC,SAAM,aAAW,EAAAuB,SAAW,cAAe,uBAAwBJ,CAAS,EAAG,MAAOM,GACpFD,EACDxB,EAAA,cAACG,EAAuB,KAAvB,CACE,GAAGmB,EACH,GAAGN,EACJ,IAAKC,EACL,aAAW,EAAAM,SACT,WACA,sBACA,0BACAI,CACF,GAEA3B,EAAA,cAACG,EAAuB,UAAvB,CACE,GAAGmB,EACJ,QAAO,GACP,UAAU,4BAEVtB,EAAA,cAAC,qBAAe,CAClB,CACF,CACF,CAEJ,CAAC,EACDH,EAAkB,YAAc",
  "names": ["checkbox_cards_exports", "__export", "CheckboxCardsItem", "CheckboxCardsRoot", "__toCommonJS", "React", "import_classnames", "import_react_context", "CheckboxGroupPrimitive", "import_checkbox_group_primitive", "import_checkbox_cards_props", "import_base_checkbox_props", "import_helpers", "import_props", "import_grid", "import_icons", "CHECKBOX_CARD_GROUP_NAME", "createCheckboxCardsContext", "useCheckboxGroupScope", "CheckboxCardsProvider", "useCheckboxCardsContext", "props", "forwardedRef", "__scopeCheckboxCards", "className", "color", "rootProps", "checkboxGroupScope", "classNames", "children", "style", "context", "checkboxClassName"]
}
