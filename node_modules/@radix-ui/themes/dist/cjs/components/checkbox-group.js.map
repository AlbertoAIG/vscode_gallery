{
  "version": 3,
  "sources": ["../../../src/components/checkbox-group.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxGroupRootPropDefs } from './checkbox-group.props.js';\nimport { extractProps } from '../helpers/index.js';\nimport { marginPropDefs } from '../props/index.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { Text } from './text.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { GetPropDefTypes, MarginProps } from '../props/index.js';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Scope };\nconst [createCheckboxGroupContext] = createContextScope(CHECKBOX_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxGroupRootOwnProps = GetPropDefTypes<typeof checkboxGroupRootPropDefs>;\ntype CheckboxGroupContextValue = CheckboxGroupRootOwnProps;\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ninterface CheckboxGroupRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxGroupRootOwnProps {}\nconst CheckboxGroupRoot = React.forwardRef<CheckboxGroupRootElement, CheckboxGroupRootProps>(\n  (\n    {\n      color = checkboxGroupRootPropDefs.color.default,\n      highContrast = checkboxGroupRootPropDefs.highContrast.default,\n      size = checkboxGroupRootPropDefs.size.default,\n      variant = checkboxGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<CheckboxGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeCheckboxGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        color={color}\n        size={size}\n        highContrast={highContrast}\n        variant={variant}\n      >\n        <CheckboxGroupPrimitive.Root\n          {...checkboxGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-CheckboxGroupRoot', className)}\n        />\n      </CheckboxGroupProvider>\n    );\n  }\n);\nCheckboxGroupRoot.displayName = 'CheckboxGroup.Root';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (_props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, children, className, style, ...props } = _props;\n    const { size } = useCheckboxGroupContext('CheckboxGroupItem', __scopeCheckboxGroup);\n\n    // Render `<Text as=\"label\">` if children\u00A0are provided, otherwise render\n    // the solo checkbox to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-CheckboxGroupItem', className)}\n          style={style}\n        >\n          <CheckboxGroupItemCheckbox\n            __scopeCheckboxGroup={__scopeCheckboxGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span>{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <CheckboxGroupItemCheckbox\n        __scopeCheckboxGroup={__scopeCheckboxGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nCheckboxGroupItem.displayName = 'CheckboxGroup.Item';\n\ntype CheckboxGroupItemCheckboxElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemCheckboxProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps> {}\nconst CheckboxGroupItemCheckbox = React.forwardRef<\n  CheckboxGroupItemCheckboxElement,\n  ScopedProps<CheckboxGroupItemCheckboxProps>\n>(({ __scopeCheckboxGroup, ...props }, forwardedRef) => {\n  const context = useCheckboxGroupContext('CheckboxGroupItemCheckbox', __scopeCheckboxGroup);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    checkboxGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <CheckboxGroupPrimitive.Item\n      {...checkboxGroupScope}\n      data-accent-color={color}\n      {...props}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-reset',\n        'rt-BaseCheckboxRoot',\n        'rt-CheckboxGroupItemCheckbox',\n        className\n      )}\n    >\n      <CheckboxGroupPrimitive.Indicator\n        {...checkboxGroupScope}\n        asChild\n        className=\"rt-BaseCheckboxIndicator\"\n      >\n        <ThickCheckIcon />\n      </CheckboxGroupPrimitive.Indicator>\n    </CheckboxGroupPrimitive.Item>\n  );\n});\nCheckboxGroupItemCheckbox.displayName = 'CheckboxGroup.ItemCheckbox';\n\nexport { CheckboxGroupRoot as Root, CheckboxGroupItem as Item };\nexport type { CheckboxGroupRootProps as RootProps, CheckboxGroupItemProps as ItemProps };\n"],
  "mappings": "ukBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,UAAAE,EAAA,SAAAC,IAAA,eAAAC,EAAAJ,GAEA,IAAAK,EAAuB,oBACvBC,EAAuB,yBACvBC,EAAmC,mCACnCC,EAAwC,4CACxCC,EAAyC,yCACzCC,EAA0C,qCAC1CC,EAA6B,+BAC7BC,EAA+B,6BAC/BC,EAA+B,sBAC/BC,EAAqB,qBAMrB,MAAMC,EAAsB,gBAGtB,CAACC,CAA0B,KAAI,sBAAmBD,EAAqB,CAC3E,0BACF,CAAC,EACKE,KAAwB,4BAAyB,EAKjD,CAACC,EAAuBC,CAAuB,EACnDH,EAAsDD,CAAmB,EAUrEZ,EAAoBE,EAAM,WAC9B,CACE,CACE,MAAAe,EAAQ,4BAA0B,MAAM,QACxC,aAAAC,EAAe,4BAA0B,aAAa,QACtD,KAAAC,EAAO,4BAA0B,KAAK,QACtC,QAAAC,EAAU,4BAA0B,QAAQ,QAC5C,GAAGC,CACL,EACAC,IACG,CACH,KAAM,CAAE,qBAAAC,EAAsB,UAAAC,EAAW,GAAGC,CAAU,KAAI,gBAAaJ,EAAO,gBAAc,EACtFK,EAAqBZ,EAAsBS,CAAoB,EACrE,OACErB,EAAA,cAACa,EAAA,CACC,MAAOQ,EACP,MAAON,EACP,KAAME,EACN,aAAcD,EACd,QAASE,GAETlB,EAAA,cAACG,EAAuB,KAAvB,CACE,GAAGqB,EACH,GAAGD,EACJ,IAAKH,EACL,aAAW,EAAAK,SAAW,uBAAwBH,CAAS,EACzD,CACF,CAEJ,CACF,EACAxB,EAAkB,YAAc,qBAMhC,MAAMD,EAAoBG,EAAM,WAC9B,CAAC0B,EAA6CN,IAAiB,CAC7D,KAAM,CAAE,qBAAAC,EAAsB,SAAAM,EAAU,UAAAL,EAAW,MAAAM,EAAO,GAAGT,CAAM,EAAIO,EACjE,CAAE,KAAAT,CAAK,EAAIH,EAAwB,oBAAqBO,CAAoB,EAIlF,OAAIM,EAEA3B,EAAA,cAAC,QACC,GAAG,QACH,KAAMiB,EACN,aAAW,EAAAQ,SAAW,uBAAwBH,CAAS,EACvD,MAAOM,GAEP5B,EAAA,cAAC6B,EAAA,CACC,qBAAsBR,EACrB,GAAGF,EACJ,IAAKC,EACP,EACCO,GAAY3B,EAAA,cAAC,YAAM2B,CAAS,CAC/B,EAKF3B,EAAA,cAAC6B,EAAA,CACC,qBAAsBR,EACrB,GAAGF,EACJ,IAAKC,EACL,UAAWE,EACX,MAAOM,EACT,CAEJ,CACF,EACA/B,EAAkB,YAAc,qBAKhC,MAAMgC,EAA4B7B,EAAM,WAGtC,CAAC,CAAE,qBAAAqB,EAAsB,GAAGF,CAAM,EAAGC,IAAiB,CACtD,MAAMU,EAAUhB,EAAwB,4BAA6BO,CAAoB,EACnFG,EAAqBZ,EAAsBS,CAAoB,EAC/D,CAAE,MAAAN,EAAO,UAAAO,CAAU,KAAI,gBAC3B,CAAE,GAAGH,EAAO,GAAGW,CAAQ,EACvB,4BACA,gBACF,EACA,OACE9B,EAAA,cAACG,EAAuB,KAAvB,CACE,GAAGqB,EACJ,oBAAmBT,EAClB,GAAGI,EACJ,IAAKC,EACL,aAAW,EAAAK,SACT,WACA,sBACA,+BACAH,CACF,GAEAtB,EAAA,cAACG,EAAuB,UAAvB,CACE,GAAGqB,EACJ,QAAO,GACP,UAAU,4BAEVxB,EAAA,cAAC,qBAAe,CAClB,CACF,CAEJ,CAAC,EACD6B,EAA0B,YAAc",
  "names": ["checkbox_group_exports", "__export", "CheckboxGroupItem", "CheckboxGroupRoot", "__toCommonJS", "React", "import_classnames", "import_react_context", "CheckboxGroupPrimitive", "import_checkbox_group_primitive", "import_checkbox_group_props", "import_helpers", "import_props", "import_icons", "import_text", "CHECKBOX_GROUP_NAME", "createCheckboxGroupContext", "useCheckboxGroupScope", "CheckboxGroupProvider", "useCheckboxGroupContext", "color", "highContrast", "size", "variant", "props", "forwardedRef", "__scopeCheckboxGroup", "className", "rootProps", "checkboxGroupScope", "classNames", "_props", "children", "style", "CheckboxGroupItemCheckbox", "context"]
}
