{
  "version": 3,
  "sources": ["../../../src/components/alert-dialog.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog';\nimport { alertDialogContentPropDefs } from './alert-dialog.props.js';\nimport { extractProps, requireReactElement } from '../helpers/index.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\n\nimport type { ComponentPropsAs, ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { AlertDialogContentOwnProps } from '../props/index.js';\n\ninterface AlertDialogRootProps\n  extends React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Root> {}\nconst AlertDialogRoot: React.FC<AlertDialogRootProps> = (props) => (\n  <AlertDialogPrimitive.Root {...props} />\n);\nAlertDialogRoot.displayName = 'AlertDialog.Root';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof AlertDialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Trigger, RemovedProps> {}\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Trigger>\n  )\n);\nAlertDialogTrigger.displayName = 'AlertDialog.Trigger';\n\ntype AlertDialogContentElement = React.ElementRef<typeof AlertDialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Content, RemovedProps>,\n    AlertDialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Portal>['container'];\n}\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  (props, forwardedRef) => {\n    const { className, forceMount, container, ...contentProps } = extractProps(\n      props,\n      alertDialogContentPropDefs\n    );\n    return (\n      <AlertDialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <AlertDialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-AlertDialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-AlertDialogScroll\">\n              <div className=\"rt-BaseDialogScrollPadding rt-AlertDialogScrollPadding\">\n                <AlertDialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-AlertDialogContent', className)}\n                />\n              </div>\n            </div>\n          </AlertDialogPrimitive.Overlay>\n        </Theme>\n      </AlertDialogPrimitive.Portal>\n    );\n  }\n);\nAlertDialogContent.displayName = 'AlertDialog.Content';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof Heading>;\ntype AlertDialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props, forwardedRef) => (\n    <AlertDialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </AlertDialogPrimitive.Title>\n  )\n);\nAlertDialogTitle.displayName = 'AlertDialog.Title';\n\ntype AlertDialogDescriptionElement = HTMLParagraphElement;\ntype AlertDialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props, forwardedRef) => (\n  <AlertDialogPrimitive.Description asChild>\n    <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n  </AlertDialogPrimitive.Description>\n));\nAlertDialogDescription.displayName = 'AlertDialog.Description';\n\ntype AlertDialogActionElement = React.ElementRef<typeof AlertDialogPrimitive.Action>;\ninterface AlertDialogActionProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Action, RemovedProps> {}\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Action {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Action>\n  )\n);\nAlertDialogAction.displayName = 'AlertDialog.Action';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof AlertDialogPrimitive.Cancel>;\ninterface AlertDialogCancelProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Cancel, RemovedProps> {}\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Cancel {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Cancel>\n  )\n);\nAlertDialogCancel.displayName = 'AlertDialog.Cancel';\n\nexport {\n  AlertDialogRoot as Root,\n  AlertDialogTrigger as Trigger,\n  AlertDialogContent as Content,\n  AlertDialogTitle as Title,\n  AlertDialogDescription as Description,\n  AlertDialogAction as Action,\n  AlertDialogCancel as Cancel,\n};\n\nexport type {\n  AlertDialogRootProps as RootProps,\n  AlertDialogTriggerProps as TriggerProps,\n  AlertDialogContentProps as ContentProps,\n  AlertDialogTitleProps as TitleProps,\n  AlertDialogDescriptionProps as DescriptionProps,\n  AlertDialogActionProps as ActionProps,\n  AlertDialogCancelProps as CancelProps,\n};\n"],
  "mappings": "ukBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,EAAA,WAAAC,EAAA,YAAAC,EAAA,gBAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,YAAAC,IAAA,eAAAC,EAAAT,GAEA,IAAAU,EAAuB,oBACvBC,EAAuB,yBACvBC,EAAsC,2CACtCC,EAA2C,mCAC3CC,EAAkD,+BAClDC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAsB,sBAOtB,MAAMX,EAAmDY,GACvDR,EAAA,cAACE,EAAqB,KAArB,CAA2B,GAAGM,EAAO,EAExCZ,EAAgB,YAAc,mBAK9B,MAAME,EAAqBE,EAAM,WAC/B,CAAC,CAAE,SAAAS,EAAU,GAAGD,CAAM,EAAGE,IACvBV,EAAA,cAACE,EAAqB,QAArB,CAA8B,GAAGM,EAAO,IAAKE,EAAc,QAAO,OAChE,uBAAoBD,CAAQ,CAC/B,CAEJ,EACAX,EAAmB,YAAc,sBAQjC,MAAMJ,EAAqBM,EAAM,WAC/B,CAACQ,EAAOE,IAAiB,CACvB,KAAM,CAAE,UAAAC,EAAW,WAAAC,EAAY,UAAAC,EAAW,GAAGC,CAAa,KAAI,gBAC5DN,EACA,4BACF,EACA,OACER,EAAA,cAACE,EAAqB,OAArB,CAA4B,UAAWW,EAAW,WAAYD,GAC7DZ,EAAA,cAAC,SAAM,QAAO,IACZA,EAAA,cAACE,EAAqB,QAArB,CAA6B,UAAU,8CACtCF,EAAA,cAAC,OAAI,UAAU,4CACbA,EAAA,cAAC,OAAI,UAAU,0DACbA,EAAA,cAACE,EAAqB,QAArB,CACE,GAAGY,EACJ,IAAKJ,EACL,aAAW,EAAAK,SAAW,uBAAwB,wBAAyBJ,CAAS,EAClF,CACF,CACF,CACF,CACF,CACF,CAEJ,CACF,EACAjB,EAAmB,YAAc,sBAIjC,MAAMG,EAAmBG,EAAM,WAC7B,CAACQ,EAAOE,IACNV,EAAA,cAACE,EAAqB,MAArB,CAA2B,QAAO,IACjCF,EAAA,cAAC,WAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,QAAS,GAAGQ,EAAO,QAAS,GAAO,IAAKE,EAAc,CACtF,CAEJ,EACAb,EAAiB,YAAc,oBAI/B,MAAMF,EAAyBK,EAAM,WAGnC,CAACQ,EAAOE,IACRV,EAAA,cAACE,EAAqB,YAArB,CAAiC,QAAO,IACvCF,EAAA,cAAC,QAAK,GAAG,IAAI,KAAK,IAAK,GAAGQ,EAAO,QAAS,GAAO,IAAKE,EAAc,CACtE,CACD,EACDf,EAAuB,YAAc,0BAKrC,MAAMH,EAAoBQ,EAAM,WAC9B,CAAC,CAAE,SAAAS,EAAU,GAAGD,CAAM,EAAGE,IACvBV,EAAA,cAACE,EAAqB,OAArB,CAA6B,GAAGM,EAAO,IAAKE,EAAc,QAAO,OAC/D,uBAAoBD,CAAQ,CAC/B,CAEJ,EACAjB,EAAkB,YAAc,qBAKhC,MAAMC,EAAoBO,EAAM,WAC9B,CAAC,CAAE,SAAAS,EAAU,GAAGD,CAAM,EAAGE,IACvBV,EAAA,cAACE,EAAqB,OAArB,CAA6B,GAAGM,EAAO,IAAKE,EAAc,QAAO,OAC/D,uBAAoBD,CAAQ,CAC/B,CAEJ,EACAhB,EAAkB,YAAc",
  "names": ["alert_dialog_exports", "__export", "AlertDialogAction", "AlertDialogCancel", "AlertDialogContent", "AlertDialogDescription", "AlertDialogRoot", "AlertDialogTitle", "AlertDialogTrigger", "__toCommonJS", "React", "import_classnames", "AlertDialogPrimitive", "import_alert_dialog_props", "import_helpers", "import_heading", "import_text", "import_theme", "props", "children", "forwardedRef", "className", "forceMount", "container", "contentProps", "classNames"]
}
