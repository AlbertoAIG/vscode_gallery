{
  "version": 3,
  "sources": ["../../../src/components/box.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from './slot.js';\nimport { boxPropDefs } from './box.props.js';\nimport { extractProps } from '../helpers/index.js';\nimport { layoutPropDefs, marginPropDefs } from '../props/index.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/index.js';\nimport type { MarginProps, LayoutProps, BoxOwnProps } from '../props/index.js';\n\ntype BoxElement = React.ElementRef<'div'>;\ninterface CommonBoxProps extends MarginProps, LayoutProps, BoxOwnProps {}\ntype BoxDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype BoxSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype BoxProps = CommonBoxProps & (BoxSpanProps | BoxDivProps);\n\nconst Box = React.forwardRef<BoxElement, BoxProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...boxProps\n  } = extractProps(props, boxPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...boxProps} ref={forwardedRef} className={classNames('rt-Box', className)} />;\n});\nBox.displayName = 'Box';\n\nexport { Box };\nexport type { BoxProps };\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,SAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAuB,oBACvBC,EAAuB,yBACvBC,EAAqB,qBACrBC,EAA4B,0BAC5BC,EAA6B,+BAC7BC,EAA+C,6BAW/C,MAAMP,EAAME,EAAM,WAAiC,CAACM,EAAOC,IAAiB,CAC1E,KAAM,CACJ,UAAAC,EACA,QAAAC,EACA,GAAIC,EAAM,MACV,GAAGC,CACL,KAAI,gBAAaL,EAAO,cAAa,iBAAgB,gBAAc,EAEnE,OAAON,EAAA,cADMS,EAAU,OAAOC,EACtB,CAAM,GAAGC,EAAU,IAAKJ,EAAc,aAAW,EAAAK,SAAW,SAAUJ,CAAS,EAAG,CAC5F,CAAC,EACDV,EAAI,YAAc",
  "names": ["box_exports", "__export", "Box", "__toCommonJS", "React", "import_classnames", "import_slot", "import_box_props", "import_helpers", "import_props", "props", "forwardedRef", "className", "asChild", "Tag", "boxProps", "classNames"]
}
